version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    restart: always

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
       - ~/.docker/postgres/data/:/var/lib/postgres/
       - ~/.docker/postgres/log/:/var/log/postgres/
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: always

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: heliosugano.7022@aluno.saojudas.br
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    networks:
      - postgres
    restart: always

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - ~/.docker/mongodb/data/:/var/lib/mongodb/
      - ~/.docker/mongodb/log/:/var/log/mongodb/
    networks:
      - mongo-compose-network

  app_doctor_web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - /app/frontend/node_modules
      - .:/app

  app_doctor_login:
    build: 
      context: ./backend/api/login
      dockerfile: Dockerfile
    container_name: app_doctor_login
    environment:
      - MONGODB_URL=mongodb://admin:admin@localhost:27017/?authMechanism=DEFAULT
      - PORT=3000
      - NODE_ENV=production
    ports:
      - 3000:3000
    volumes:
      - /app/api/login/node_modules
      - .:/app
    links:
      - mongo
      - rabbitmq
    depends_on:
      - mongo
      - rabbitmq

  app_doctor_sistema:
    build:
      context: ./backend/api/sistema
      dockerfile: Dockerfile
    container_name: app_doctor_sistema
    environment:
      - HOST=localhost
      - USERNAME=admin
      - PASSWORD=admin
      - DATABASE=app-doctor-sistema
      - PORT_DB=5432
      - PORT=4000
    ports:
      - 4000:4000
    volumes:
      - /app/api/sistema/node_modules
      - .:/app
    links:
      - postgres
      - rabbitmq
    depends_on:
      - postgres
      - rabbitmq

networks:
  rabbitmq_go_net:
    driver: bridge
  postgres:
    driver: bridge
  mongo-compose-network:
    driver: bridge

volumes:
  postgres:
  pgadmin: